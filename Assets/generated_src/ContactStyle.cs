//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ContactStyle : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ContactStyle(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ContactStyle obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ContactStyle() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_ContactStyle(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public bool admin {
    set {
      yarpPINVOKE.ContactStyle_admin_set(swigCPtr, value);
    } 
    get {
      bool ret = yarpPINVOKE.ContactStyle_admin_get(swigCPtr);
      return ret;
    } 
  }

  public bool quiet {
    set {
      yarpPINVOKE.ContactStyle_quiet_set(swigCPtr, value);
    } 
    get {
      bool ret = yarpPINVOKE.ContactStyle_quiet_get(swigCPtr);
      return ret;
    } 
  }

  public bool verboseOnSuccess {
    set {
      yarpPINVOKE.ContactStyle_verboseOnSuccess_set(swigCPtr, value);
    } 
    get {
      bool ret = yarpPINVOKE.ContactStyle_verboseOnSuccess_get(swigCPtr);
      return ret;
    } 
  }

  public double timeout {
    set {
      yarpPINVOKE.ContactStyle_timeout_set(swigCPtr, value);
    } 
    get {
      double ret = yarpPINVOKE.ContactStyle_timeout_get(swigCPtr);
      return ret;
    } 
  }

  public string carrier {
    set {
      yarpPINVOKE.ContactStyle_carrier_set(swigCPtr, value);
      if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = yarpPINVOKE.ContactStyle_carrier_get(swigCPtr);
      if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool expectReply {
    set {
      yarpPINVOKE.ContactStyle_expectReply_set(swigCPtr, value);
    } 
    get {
      bool ret = yarpPINVOKE.ContactStyle_expectReply_get(swigCPtr);
      return ret;
    } 
  }

  public bool persistent {
    set {
      yarpPINVOKE.ContactStyle_persistent_set(swigCPtr, value);
    } 
    get {
      bool ret = yarpPINVOKE.ContactStyle_persistent_get(swigCPtr);
      return ret;
    } 
  }

  public ContactStyle.PersistenceType persistenceType {
    set {
      yarpPINVOKE.ContactStyle_persistenceType_set(swigCPtr, (int)value);
    } 
    get {
      ContactStyle.PersistenceType ret = (ContactStyle.PersistenceType)yarpPINVOKE.ContactStyle_persistenceType_get(swigCPtr);
      return ret;
    } 
  }

  public ContactStyle() : this(yarpPINVOKE.new_ContactStyle(), true) {
  }

  public enum PersistenceType {
    OPENENDED = 0,
    END_WITH_FROM_PORT = 1,
    END_WITH_TO_PORT = 2,
    NO_PERSISTENCE = 3
  }

}
