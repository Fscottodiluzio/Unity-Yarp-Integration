//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class DeviceDriver : IConfig {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal DeviceDriver(global::System.IntPtr cPtr, bool cMemoryOwn) : base(yarpPINVOKE.DeviceDriver_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(DeviceDriver obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~DeviceDriver() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_DeviceDriver(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public override bool open(Searchable config) {
    bool ret = yarpPINVOKE.DeviceDriver_open(swigCPtr, Searchable.getCPtr(config));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool close() {
    bool ret = yarpPINVOKE.DeviceDriver_close(swigCPtr);
    return ret;
  }

  public virtual DeviceDriver getImplementation() {
    global::System.IntPtr cPtr = yarpPINVOKE.DeviceDriver_getImplementation(swigCPtr);
    DeviceDriver ret = (cPtr == global::System.IntPtr.Zero) ? null : new DeviceDriver(cPtr, false);
    return ret;
  }

  public DeviceDriver() : this(yarpPINVOKE.new_DeviceDriver(), true) {
  }

}
