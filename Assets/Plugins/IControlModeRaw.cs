//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IControlModeRaw : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IControlModeRaw(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IControlModeRaw obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IControlModeRaw() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_IControlModeRaw(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual bool setPositionModeRaw(int j) {
    bool ret = yarpPINVOKE.IControlModeRaw_setPositionModeRaw(swigCPtr, j);
    return ret;
  }

  public virtual bool setVelocityModeRaw(int j) {
    bool ret = yarpPINVOKE.IControlModeRaw_setVelocityModeRaw(swigCPtr, j);
    return ret;
  }

  public virtual bool setTorqueModeRaw(int j) {
    bool ret = yarpPINVOKE.IControlModeRaw_setTorqueModeRaw(swigCPtr, j);
    return ret;
  }

  public virtual bool setImpedancePositionModeRaw(int j) {
    bool ret = yarpPINVOKE.IControlModeRaw_setImpedancePositionModeRaw(swigCPtr, j);
    return ret;
  }

  public virtual bool setImpedanceVelocityModeRaw(int j) {
    bool ret = yarpPINVOKE.IControlModeRaw_setImpedanceVelocityModeRaw(swigCPtr, j);
    return ret;
  }

  public virtual bool setOpenLoopModeRaw(int j) {
    bool ret = yarpPINVOKE.IControlModeRaw_setOpenLoopModeRaw(swigCPtr, j);
    return ret;
  }

  public virtual bool getControlModeRaw(int j, SWIGTYPE_p_int mode) {
    bool ret = yarpPINVOKE.IControlModeRaw_getControlModeRaw(swigCPtr, j, SWIGTYPE_p_int.getCPtr(mode));
    return ret;
  }

  public virtual bool getControlModesRaw(SWIGTYPE_p_int modes) {
    bool ret = yarpPINVOKE.IControlModeRaw_getControlModesRaw(swigCPtr, SWIGTYPE_p_int.getCPtr(modes));
    return ret;
  }

}
