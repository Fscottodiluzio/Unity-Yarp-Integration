/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Things : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Things(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Things obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Things() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_Things(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public Things() : this(yarpPINVOKE.new_Things(), true) {
  }

  public void setPortWriter(PortWriter writer) {
    yarpPINVOKE.Things_setPortWriter(swigCPtr, PortWriter.getCPtr(writer));
  }

  public PortWriter getPortWriter() {
    IntPtr cPtr = yarpPINVOKE.Things_getPortWriter(swigCPtr);
    PortWriter ret = (cPtr == IntPtr.Zero) ? null : new PortWriter(cPtr, false);
    return ret;
  }

  public void setPortReader(PortReader reader) {
    yarpPINVOKE.Things_setPortReader(swigCPtr, PortReader.getCPtr(reader));
  }

  public PortReader getPortReader() {
    IntPtr cPtr = yarpPINVOKE.Things_getPortReader(swigCPtr);
    PortReader ret = (cPtr == IntPtr.Zero) ? null : new PortReader(cPtr, false);
    return ret;
  }

  public bool setConnectionReader(ConnectionReader reader) {
    bool ret = yarpPINVOKE.Things_setConnectionReader(swigCPtr, ConnectionReader.getCPtr(reader));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new bool write(ConnectionWriter connection) {
    bool ret = yarpPINVOKE.Things_write(swigCPtr, ConnectionWriter.getCPtr(connection));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void reset() {
    yarpPINVOKE.Things_reset(swigCPtr);
  }

  public bool hasBeenRead() {
    bool ret = yarpPINVOKE.Things_hasBeenRead(swigCPtr);
    return ret;
  }

  public Value asValue() {
    IntPtr cPtr = yarpPINVOKE.Things_asValue(swigCPtr);
    Value ret = (cPtr == IntPtr.Zero) ? null : new Value(cPtr, false);
    return ret;
  }

  public Bottle asBottle() {
    IntPtr cPtr = yarpPINVOKE.Things_asBottle(swigCPtr);
    Bottle ret = (cPtr == IntPtr.Zero) ? null : new Bottle(cPtr, false);
    return ret;
  }

  public Property asProperty() {
    IntPtr cPtr = yarpPINVOKE.Things_asProperty(swigCPtr);
    Property ret = (cPtr == IntPtr.Zero) ? null : new Property(cPtr, false);
    return ret;
  }

  public Vector asVector() {
    IntPtr cPtr = yarpPINVOKE.Things_asVector(swigCPtr);
    Vector ret = (cPtr == IntPtr.Zero) ? null : new Vector(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_yarp__sig__Matrix asMatrix() {
    IntPtr cPtr = yarpPINVOKE.Things_asMatrix(swigCPtr);
    SWIGTYPE_p_yarp__sig__Matrix ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_yarp__sig__Matrix(cPtr, false);
    return ret;
  }

  public Image asImage() {
    IntPtr cPtr = yarpPINVOKE.Things_asImage(swigCPtr);
    Image ret = (cPtr == IntPtr.Zero) ? null : new Image(cPtr, false);
    return ret;
  }

  public ImageRgb asImageOfPixelRgb() {
    IntPtr cPtr = yarpPINVOKE.Things_asImageOfPixelRgb(swigCPtr);
    ImageRgb ret = (cPtr == IntPtr.Zero) ? null : new ImageRgb(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_yarp__sig__ImageOfT_yarp__sig__PixelBgr_t asImageOfPixelBgr() {
    IntPtr cPtr = yarpPINVOKE.Things_asImageOfPixelBgr(swigCPtr);
    SWIGTYPE_p_yarp__sig__ImageOfT_yarp__sig__PixelBgr_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_yarp__sig__ImageOfT_yarp__sig__PixelBgr_t(cPtr, false);
    return ret;
  }

  public ImageMono asImageOfPixelMono() {
    IntPtr cPtr = yarpPINVOKE.Things_asImageOfPixelMono(swigCPtr);
    ImageMono ret = (cPtr == IntPtr.Zero) ? null : new ImageMono(cPtr, false);
    return ret;
  }

}
